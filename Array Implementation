#include <stdio.h>
#include <stdlib.h>

struct Queue {
    int size;
    int front;
    int rear;
    int *Q;
};

void Enqueue(struct Queue *queue, int element) {
     if(queue->rear==queue->size-1)
        printf("Queue is already full\n");
     else {
        queue->rear++;
        queue->Q[queue->rear] = element;
     }
}

int Dequeue(struct Queue *queue) {
    int x;
    if(queue->front==queue->rear)
        printf("Queue is empty\n");
    else {
        queue->front++;
        x = queue->Q[queue->front];
        return x;
    }
}

void display(struct Queue queue) {
    for(int i=queue.front+1; i<=queue.rear; i++)
        printf("%d ", queue.Q[i]);
    printf("\n");
}

int isFull(struct Queue queue) {
    if(queue.rear==queue.size-1)
        return 1;
    else
        return 0;
}

int isEmpty(struct Queue queue) {
    if(queue.rear==queue.front)
        return 1;
    else
        return 0;
}

int main()
{
    struct Queue queue;
    queue.size=10;
    queue.rear=queue.front=-1;
    queue.Q=(int *)malloc((queue.size)*sizeof(int));
    Enqueue(&queue, 50);
    Enqueue(&queue, 100);
    Enqueue(&queue, 150);
    Enqueue(&queue, 200);
    printf("Element dequeued: %d\n", Dequeue(&queue));
    display(queue);
    if(isFull(queue))
        printf("Queue Full\n");
    else
        printf("Queue not full\n");
    if(isEmpty(queue))
        printf("Queue empty");
    else
        printf("Queue not empty");

}
